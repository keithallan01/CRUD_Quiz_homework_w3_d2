Q1. Where are we instantiating instances of the Property class?

  - In the console.rb file in lines 6, 15 and  24

Q2. Where are we defining the SQL that enables us to save the ruby Property object into the database?

  - In the property.rb file on line 18.

Q3. In console.rb, which lines modify the database?

  - lines 4, 13, 22, 31 and 33.

Q4. Why do we not define the id of a Property object at the point we instantiate it (‘new it up’)?

  - We don't define the id of a property object at this point as it doesn't exist yet. It only exists once it's been put in the database.

Q5. Where and how do we assign the id (that is generated by the database) to the ruby Property object?

  In line 32 of the property.rb file.  @id = db.exec_prepared("save", values)[0]["id"]

  We are calling the "id" key, which is a hash, on the the first instance of the array which is returned by this(db.exec_prepared("save", values) db operation. So essentially, we are drilling down into the ["id"] hash to in order to assign a id to a property object.

Q6. Why do we put a guard (an if clause) on the @id attribute in the constructor?

  - The @id attribute in the constructor as it is an instance variable. The guard tells the istance variable to assign an id, if an id exitst. If not, do nothing.

Q7. Why are some of the CRUD actions represented by instance methods, and others by class methods?

  - Some of the CRUD actions are represented by instance methods as we only want to use the actions for certain instances(save, update, delete). We would use class methods for creating a new class and deleting all.

Q8. What type of data structure is returned by calls to db.exec_prepared()? In the save method, how do we access the id from the returned data structure?
 -  @id = db.exec_prepared("save", values)[0]["id"]

  - An array of hashes. We access the id by calling on the id key on the first instance of the array.

Q9. Why do we use prepared statements when performing database operations?

  - We use prepared statements to protect the database from dangerous data (i.e drop table)

Extension Questions
Look at the find_by_id and find_by_address methods in the Property class.

Q10. What do they take in as their arguments?

  - the find_by_id method takes the (id) as the arguement and the find_by_address method takes (address) as it's argument

Q11. What are their return values?

  - the return value of find_by_id method is the hash of the property thats entered as the argument.
  - the return value of find_by_address method is also the hash of the propoety that's entered as the argument.
